---
import BaseHead from "../components/BaseHead.astro";
import { SITE_TITLE, SITE_DESCRIPTION } from "../consts";
import { getCollection, render } from "astro:content";

// Get the homepage content
const homepageContent = await getCollection("homepage");
const homepage = homepageContent[0]; // Get the first (and only) homepage entry
const { Content } = await render(homepage);
---

<!doctype html>
<html lang="en">
	<head>
		<BaseHead title={SITE_TITLE} description={SITE_DESCRIPTION} />
	</head>
	<body>
		<main>
			<div class="hero-container">
				<div class="hero-text">
					<div class="hero-title">
						<div class="title-word">Cloudflare</div>
						<div class="title-word">Atlas</div>
					</div>
					<p class="hero-subtitle">{homepage.data.description}</p>
				</div>
				<div class="hero-image">
					<img
						src={homepage.data.heroImage || "/atlas-logo-black.svg"}
						alt="Cloudflare Atlas Logo"
					/>
				</div>
			</div>
		</main>

		<!-- Content from MDX file -->
		<section
			class="content-section"
			style="width: 50%; padding: 4rem; min-height: 100vh;"
		>
			<div class="content-panel">
				<h1>Developer Documentation</h1>
				<p>Dive into the details about Cloudflare's products.</p>
			</div>

			<div class="content-panel">
				<h1>Blogs</h1>
				<p>
					Read everything from technical deep-dives powering our technology to
					new ideas in the future of the internet.
				</p>
			</div>

			<div class="content-panel">
				<h1>Cloudflare Research</h1>
				<p>Learn how we are planning to help build a better internet.</p>
			</div>

			<div class="content-panel">
				<h1>Cloudflare University</h1>
				<p>Take courses to earn Cloudflare certifications.</p>
			</div>
		</section>

		<script>
			import {
				animate,
				splitText,
				svg,
				stagger,
				random,
				createTimeline,
			} from "animejs";

			window.addEventListener("load", function () {
				console.log("Page loaded");

				// General helper function to ensure all instances are processed
				function forAllInstances(selector, callback) {
					const elements = document.querySelectorAll(selector);
					console.log(`Found ${elements.length} elements for: ${selector}`);
					return Array.from(elements).map(callback);
				}

				// Efficient helper - animates each element independently but simultaneously
				function animateAllText(selector, splitOptions, animationConfig) {
					const elements = document.querySelectorAll(selector);

					elements.forEach((element, index) => {
						const { words } = splitText(element, splitOptions);

						// Create independent animation for each paragraph
						// Add a base delay offset for each paragraph but keep same stagger direction
						const baseDelay = index * 200; // Delay each paragraph by 200ms

						animate(words, {
							...animationConfig,
							delay: (el, i) =>
								baseDelay + i * (animationConfig.delay?.stagger || 50),
						});
					});
				}

				// Animate text by line codeblock - simple approach for all paragraphs
				animateAllText(
					".content-panel p",
					{ words: { wrap: "clip" } },
					{
						y: [
							{ to: ["100%", "0%"] },
							{ to: "-100%", delay: 1500, ease: "in(3)" },
						],
						duration: 750,
						ease: "out(3)",
						delay: { stagger: 50 },
						loop: true,
						loopDelay: 100,
					},
				);

				// Logo rotation on scroll
				window.addEventListener("scroll", function () {
					const scrolled = window.pageYOffset;
					const rotation = scrolled * -0.1;

					const logoImg = document.querySelector(".hero-image img");
					if (logoImg) {
						logoImg.style.transform = `rotate(${rotation}deg)`;
					}
				});
			});
		</script>

		<style>
			:root {
				overscroll-behavior: none;
			}
			body {
				margin: 0;
				padding: 0;
				min-height: 100vh;
				overflow-x: hidden;
				background: linear-gradient(to bottom, #066eb9, #bbdefb);
				background-attachment: fixed;
			}

			main {
				height: 100%;
				width: 100%;
				max-width: 100vw;
				overflow-x: hidden;
				background: transparent;
			}
			.hero-container {
				display: block;
				min-height: 100vh;
				width: 50%;
				padding: 0;
				box-sizing: border-box;
			}

			.hero-text {
				display: flex;
				flex-direction: column;
				justify-content: center;
				min-height: 100vh;
				text-align: left;
				padding: 4rem;
				box-sizing: border-box;
			}

			.hero-title {
				margin: 0 0 1rem 0;
			}

			.title-word {
				font-size: clamp(4.5rem, 11vw, 9rem);
				font-weight: bold;
				line-height: 1.1;
				color: #333;
				display: block;
				white-space: nowrap;
			}

			.hero-subtitle {
				font-size: clamp(1.2rem, 3vw, 2rem);
				margin: 0;
				color: #333;
				font-weight: 300;
			}

			.hero-image {
				position: fixed;
				top: 0;
				right: 0;
				width: 50%;
				height: 100vh;
				display: flex;
				justify-content: center;
				align-items: center;
				z-index: 1;
				background: linear-gradient(to bottom, #066eb9, #bbdefb);
			}

			.hero-image img {
				width: 65%;
				height: auto;
				max-width: 100%;
				object-fit: contain;
			}

			.content-section {
				color: #333;
				font-family: inherit;
				background: transparent;
			}

			.content-panel {
				width: 50%;
				margin: 75vh 0 0 0;
				background: rgba(255, 255, 255, 0.15);
				backdrop-filter: blur(10px);
				border: 1px solid rgba(255, 255, 255, 0.2);
				border-radius: 20px;
				padding: 2.5rem;
				box-shadow: 0 8px 32px rgba(0, 0, 0, 0.1);
			}

			.content-panel:first-child {
				margin-top: 0;
			}

			.content-panel h1 {
				font-size: 3rem;
				margin: 0 0 1.5rem 0;
				font-weight: bold;
				color: #333;
			}

			.content-panel h2 {
				font-size: 2.5rem;
				margin: 2rem 0 1rem 0;
				font-weight: bold;
				color: #333;
			}

			.content-panel p {
				font-size: 1.2rem;
				line-height: 1.6;
				margin: 0;
				color: #333;
			}

			@media (max-width: 768px) {
				.hero-container {
					flex-direction: column;
					text-align: left;
					min-height: auto;
					padding: 1rem;
				}

				.hero-text {
					order: 1;
					text-align: left;
				}

				.hero-image {
					order: 2;
					max-width: 80%;
				}

				.content-section {
					width: 100% !important;
					padding: 2rem;
				}
			}
		</style>
	</body>
</html>
